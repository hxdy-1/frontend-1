.app_container {
    display: flex;
    flex-direction: column;
    align-items: center;

    width: 80%;
}

.app_container_styling {
    border: 2px solid rgba(0, 0, 0, .1);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    padding: 1em;

    overflow: hidden;
}

.app_container>* {
    margin-bottom: 1.5rem;
}

/* Movies UI: */

.movie_data_container {
    height: 65vh;
    display: grid;
    grid-template-columns: 1.3fr 1fr;

    transition: all var(--transition-medium);
}

.movie_poster_container {
    position: relative;
    overflow-x: hidden;
}

.movie_poster_container_styling {
    color: white;
    cursor: pointer;

    background-color: rgb(34, 34, 34, .6);
    background-image: url('https://image.tmdb.org/t/p/w500/94xxm5701CzOdJdUEdIuwqZaowx.jpg');
    background-size: cover;
    background-position: top;
    background-blend-mode: hard-light;

    transition: opacity var(--transition-medium),
        background-blend-mode var(--transition-medium),
        background-size var(--transition-medium),
        background-color var(--transition-medium),
        background-position var(--transition-medium);

    font-size: 2rem;
    line-height: 1.5;
    text-align: center;
}

.movie_poster_container:hover {
    background-color: rgb(153, 153, 153);
    background-position: center;

    /* The poster's title appears using this: */
    /* background-position: bottom; */
}

.movie_poster_container::before {
    content: attr(data-title);
    position: absolute;
    top: 50%;
    left: 50%;

    transform: translateY(-50%) translateX(-150%);

    text-shadow: 3px 0px 7px rgba(255, 255, 255, 0.42),
        -3px 0px 5px rgba(255, 255, 255, 0.55),
        0px 4px 3px rgba(255, 255, 255, 0.822),
        0px 4px 1px rgba(255, 255, 255, 0.952);
    opacity: 0;

    user-select: none;
    -webkit-user-select: none;
}

.animate_in.movie_poster_container::before {
    animation: scroll_in 1500ms forwards ease-in-out;
}

.animate_out.movie_poster_container::before {
    animation: scroll_out 1500ms ease-in-out;
}

.movie_information_container {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

.movie_information_container_styling {
    padding: 1em;
    color: white;
    line-height: 1.4;

    background-image: linear-gradient(var(--gradient-direction-1), rgb(244, 125, 125), rgb(238, 26, 26));
}

.movie_overview {
    text-align-last: center;
    margin-bottom: 1.7rem;
}

.movie_overview::first-letter {
    font-size: 2.5rem;
    font-weight: bolder;
    float: left;
    margin: -0.5rem .3rem -0.4rem 0;
}

.movie_extras_information_container {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
}

.movie_extras_information_container>*:not(*:nth-last-child(1), *:nth-last-child(2)) {
    margin-bottom: .7rem;
}

.more_movies_cont {
    display: flex;
    flex-direction: column;
}

.more_movies_cont>* {
    margin-bottom: .3rem;
}

/* Error handling UI: */

.error_container {
    display: flex;
    flex-direction: column;
    align-items: center;

    /* When the error message is too small, this makes the UI look better: */
    min-width: 30rem;

    height: 17rem;
}

.error_container_styling {
    background-color: rgb(245, 68, 68);
    background-image: linear-gradient(var(--gradient-direction-1), rgb(253, 182, 182), rgb(244, 139, 139), rgb(243, 92, 92));
    padding: 1em;
    border-radius: 15px;

    transition: all var(--transition-medium);
}

.error_container>* {
    margin-bottom: 1rem;
}

.error_signs {
    align-self: end;

    display: flex;
}

.error_signs>* {
    width: 0.6rem;
    height: 0.6rem;

    background-color: rgb(208, 239, 250);
    border-radius: 50%;
    cursor: pointer;
}

.dot1,
.dot2 {
    margin-right: 0.5rem;
}

.dot2 {
    background-color: rgb(145, 231, 252);
}

.dot3 {
    background-color: rgb(94, 213, 253);
}

.rolling_animation_container {
    --scroll-animation-duration: 10s;
    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
}

.face {
    position: relative;
    height: 4rem;
    width: 4rem;
}

.face_styling {
    border-radius: 50%;
    background-color: white;
    border: 1px solid gray;

    animation: scroll_face var(--scroll-animation-duration) infinite;
}

.eye {
    position: absolute;
    height: 0.5rem;
    width: 0.5rem;

    background-color: rgba(147, 142, 142, 0.9);
    border-radius: 50%;
}

.eye-1 {
    left: 16%;
    top: 30%;
}

.eye-2 {
    left: 70%;
    top: 30%;
}

.face::before {
    content: "";
    position: absolute;
    height: 1rem;
    width: 1rem;

    border-radius: 50%;
    background-color: white;
    border-top: 4px solid rgba(147, 142, 142, 0.9);
    top: 45%;
    left: 37%;
}

.shadow {
    width: 3.5rem;
    height: 0.4rem;
}

.shadow_styling {
    background-color: rgb(0, 0, 0, 0.2);
    border-radius: 50%;
    animation: scroll_shadow var(--scroll-animation-duration) infinite;
}

.error_heading {
    color: white;
    letter-spacing: 2px;
}

.error_message {
    font-size: 0.9rem;
    word-spacing: 2px;
    text-align: center;
    text-transform: uppercase;
    color: rgba(0, 0, 0, .4);
}

.try_again_btn {
    color: rgb(233, 96, 117);
    letter-spacing: 3px;
    text-transform: uppercase;
    border-radius: 100vh;

    background-color: white;
    background-image: linear-gradient(var(--gradient-direction-1), rgb(247, 245, 245), rgb(220, 218, 218));

    box-shadow: 1px 4px 6px 2px rgba(0, 0, 0, 0.1);
    transition: transform 300ms ease-in-out, box-shadow 300ms ease-in-out,
        opacity 300ms ease-in-out;
}

.try_again_btn:hover {
    transform: scale(1.02);
    opacity: 0.95;
    box-shadow: 3px 4px 6px 0 rgba(0, 0, 0, 0.3);
}

.try_again_btn:active {
    transform: scale(1.02) translateY(2px);
    opacity: 0.85;
    box-shadow: 1px 2px 3px 0 rgba(0, 0, 0, 0.3);
}

/* Bottom buttons: */

.trending_button {
    background-color: transparent;
    /* border: 1px solid rgb(38, 109, 182); */
    border: 1px solid rgb(182, 38, 38);
    line-height: 1.2;
    position: relative;

    font-weight: 500;
}

.trending_button:hover {
    color: rgba(0, 0, 0, .7);
    background-color: transparent;
    box-shadow: 1px 2px 3px 1px rgba(0, 0, 0, .3);
}

.trending_button:before {
    content: '';
    position: absolute;
    background-color: rgb(246, 213, 213);
    background-image: linear-gradient(var(--gradient-direction-1), rgb(247, 225, 225), rgb(248, 188, 188), rgb(253, 126, 126));

    height: calc(100% + 3px);
    right: -7px;
    top: -9px;

    transition: all 550ms ease-in-out;
    width: 100%;
    z-index: -1;
}

.trending_button::after {
    content: '';
    position: absolute;
    inset: 0;
    background-image: linear-gradient(var(--gradient-direction-1), rgb(252, 216, 216), rgb(252, 164, 164), rgb(248, 82, 82));
    opacity: 0;

    transition: all 550ms ease-in-out;
    z-index: -1;
}

.trending_button:hover:before {
    right: 0px;
    top: 0px;
    height: 100%;
}

.trending_button:hover::after {
    opacity: 1;
}

.trending_button:active {
    scale: .85;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, .1);
}

.trending_button:nth-of-type(2) {
    margin-bottom: 0;
}

/* JS classes */
.container_hidden {
    height: 0;
    opacity: 0;
    transform: translateY(-20rem);
    margin-bottom: 0;
    padding: 0;

    /* For the hovering to not work: */
    visibility: hidden;
}

@keyframes scroll_in {
    from {
        opacity: 0;
        transform: translateY(-50%) translateX(-150%);
    }

    to {
        opacity: 1;
        transform: translateY(-50%) translateX(-50%);
    }
}

@keyframes scroll_out {
    from {
        opacity: 1;
        transform: translateY(-50%) translateX(-50%);
    }

    to {
        opacity: 0;
        transform: translateY(-50%) translateX(70%);
    }
}

@keyframes scroll_face {
    0% {
        transform: translateX(0) rotate(0turn);
    }

    25% {
        transform: translateX(-100%) rotate(-0.5turn);
    }

    50% {
        transform: translateX(0) rotate(0turn);
    }

    75% {
        transform: translateX(100%) rotate(0.5turn);
    }

    100% {
        transform: translateX(0) rotate(0turn);
    }
}

@keyframes scroll_shadow {
    0% {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-115%);
    }

    50% {
        transform: translateX(0);
    }

    75% {
        transform: translateX(115%);
    }

    100% {
        transform: translateX(0);
    }
}